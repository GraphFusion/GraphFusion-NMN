name: Auto Label Issues

on:
  issues:
    types: [opened, edited]

jobs:
  label:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Apply Labels Based on Keywords
        uses: actions/github-script@v6
        with:
          script: |
            const labels = [
              // General Project Labels
              { keyword: "GraphFusion", label: "GraphFusion" },
              { keyword: "NMN", label: "Neural Memory Networks" },
              { keyword: "Knowledge Graph", label: "Knowledge Graphs" },
              { keyword: "Graph", label: "graph processing" },
              { keyword: "AI", label: "AI-driven" },

              // Documentation and Examples
              { keyword: "documentation", label: "documentation" },
              { keyword: "docs", label: "documentation" },
              { keyword: "example", label: "example request" },
              { keyword: "tutorial", label: "documentation" },

              // Bugs and Issues
              { keyword: "bug", label: "bug" },
              { keyword: "error", label: "bug" },
              { keyword: "issue", label: "bug" },
              { keyword: "crash", label: "bug" },

              // Features and Enhancements
              { keyword: "feature", label: "feature request" },
              { keyword: "enhancement", label: "enhancement" },
              { keyword: "improvement", label: "enhancement" },

              // Testing and Validation
              { keyword: "test", label: "testing" },
              { keyword: "validate", label: "testing" },
              { keyword: "unit test", label: "testing" },
              { keyword: "integration test", label: "testing" },

              // First-Time Contributor Issues
              { keyword: "good first issue", label: "good first issue" },
              { keyword: "starter", label: "good first issue" },
              { keyword: "beginner", label: "good first issue" },
              { keyword: "entry-level", label: "good first issue" },

              // Performance and Optimization
              { keyword: "performance", label: "performance" },
              { keyword: "optimize", label: "performance" },
              { keyword: "speed", label: "performance" },

              // Security
              { keyword: "security", label: "security" },
              { keyword: "vulnerability", label: "security" },
              { keyword: "auth", label: "security" },

              // UI/UX
              { keyword: "ui", label: "ui/ux" },
              { keyword: "ux", label: "ui/ux" },
              { keyword: "interface", label: "ui/ux" },
              { keyword: "design", label: "ui/ux" },

              // Integration
              { keyword: "integration", label: "integration" },
              { keyword: "integration test", label: "integration" },
              { keyword: "api", label: "integration" },

              // Maintenance and Updates
              { keyword: "maintenance", label: "maintenance" },
              { keyword: "update", label: "maintenance" },
              { keyword: "refactor", label: "maintenance" },
              { keyword: "deprecated", label: "maintenance" },

              // Deployment and Infrastructure
              { keyword: "deployment", label: "deployment" },
              { keyword: "docker", label: "deployment" },
              { keyword: "ci/cd", label: "deployment" },
              { keyword: "kubernetes", label: "deployment" },

              // Platform and Ecosystem
              { keyword: "scalability", label: "scalability" },
              { keyword: "cloud", label: "cloud infrastructure" },
              { keyword: "distributed", label: "distributed systems" },
              { keyword: "microservices", label: "microservices" },
            ];

            const issueTitle = context.payload.issue.title.toLowerCase();
            const issueBody = context.payload.issue.body.toLowerCase();

            let appliedLabels = [];

            for (const { keyword, label } of labels) {
              if (issueTitle.includes(keyword) || issueBody.includes(keyword)) {
                appliedLabels.push(label);
              }
            }

            if (appliedLabels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                labels: appliedLabels
              });
            }
